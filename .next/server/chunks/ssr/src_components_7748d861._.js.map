{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/react/OMK/omk/src/components/splashcurser.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\ninterface ColorRGB {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n}\r\n\r\ninterface SplashCursorProps {\r\n  SIM_RESOLUTION?: number;\r\n  DYE_RESOLUTION?: number;\r\n  CAPTURE_RESOLUTION?: number;\r\n  DENSITY_DISSIPATION?: number;\r\n  VELOCITY_DISSIPATION?: number;\r\n  PRESSURE?: number;\r\n  PRESSURE_ITERATIONS?: number;\r\n  CURL?: number;\r\n  SPLAT_RADIUS?: number;\r\n  SPLAT_FORCE?: number;\r\n  SHADING?: boolean;\r\n  COLOR_UPDATE_SPEED?: number;\r\n  BACK_COLOR?: ColorRGB;\r\n  TRANSPARENT?: boolean;\r\n}\r\n\r\ninterface Pointer {\r\n  id: number;\r\n  texcoordX: number;\r\n  texcoordY: number;\r\n  prevTexcoordX: number;\r\n  prevTexcoordY: number;\r\n  deltaX: number;\r\n  deltaY: number;\r\n  down: boolean;\r\n  moved: boolean;\r\n  color: ColorRGB;\r\n}\r\n\r\nfunction pointerPrototype(): Pointer {\r\n  return {\r\n    id: -1,\r\n    texcoordX: 0,\r\n    texcoordY: 0,\r\n    prevTexcoordX: 0,\r\n    prevTexcoordY: 0,\r\n    deltaX: 0,\r\n    deltaY: 0,\r\n    down: false,\r\n    moved: false,\r\n    color: { r: 0, g: 0, b: 0 },\r\n  };\r\n}\r\n\r\nexport default function SplashCursor({\r\n  SIM_RESOLUTION = 128,\r\n  DYE_RESOLUTION = 1440,\r\n  CAPTURE_RESOLUTION = 512,\r\n  DENSITY_DISSIPATION = 3.5,\r\n  VELOCITY_DISSIPATION = 2,\r\n  PRESSURE = 0.1,\r\n  PRESSURE_ITERATIONS = 20,\r\n  CURL = 3,\r\n  SPLAT_RADIUS = 0.2,\r\n  SPLAT_FORCE = 6000,\r\n  SHADING = true,\r\n  COLOR_UPDATE_SPEED = 10,\r\n  BACK_COLOR = { r: 0.5, g: 0, b: 0 },\r\n  TRANSPARENT = true\r\n}: SplashCursorProps) {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    let pointers: Pointer[] = [pointerPrototype()];\r\n\r\n    let config = {\r\n      SIM_RESOLUTION: SIM_RESOLUTION!,\r\n      DYE_RESOLUTION: DYE_RESOLUTION!,\r\n      CAPTURE_RESOLUTION: CAPTURE_RESOLUTION!,\r\n      DENSITY_DISSIPATION: DENSITY_DISSIPATION!,\r\n      VELOCITY_DISSIPATION: VELOCITY_DISSIPATION!,\r\n      PRESSURE: PRESSURE!,\r\n      PRESSURE_ITERATIONS: PRESSURE_ITERATIONS!,\r\n      CURL: CURL!,\r\n      SPLAT_RADIUS: SPLAT_RADIUS!,\r\n      SPLAT_FORCE: SPLAT_FORCE!,\r\n      SHADING,\r\n      COLOR_UPDATE_SPEED: COLOR_UPDATE_SPEED!,\r\n      PAUSED: false,\r\n      BACK_COLOR,\r\n      TRANSPARENT,\r\n    };\r\n\r\n    const { gl, ext } = getWebGLContext(canvas);\r\n    if (!gl || !ext) return;\r\n\r\n    if (!ext.supportLinearFiltering) {\r\n      config.DYE_RESOLUTION = 256;\r\n      config.SHADING = false;\r\n    }\r\n\r\n    function getWebGLContext(canvas: HTMLCanvasElement) {\r\n      const params = {\r\n        alpha: true,\r\n        depth: false,\r\n        stencil: false,\r\n        antialias: false,\r\n        preserveDrawingBuffer: false,\r\n      };\r\n\r\n      let gl = canvas.getContext(\r\n        \"webgl2\",\r\n        params\r\n      ) as WebGL2RenderingContext | null;\r\n\r\n      if (!gl) {\r\n        gl = (canvas.getContext(\"webgl\", params) ||\r\n          canvas.getContext(\r\n            \"experimental-webgl\",\r\n            params\r\n          )) as WebGL2RenderingContext | null;\r\n      }\r\n\r\n      if (!gl) {\r\n        throw new Error(\"Unable to initialize WebGL.\");\r\n      }\r\n\r\n      const isWebGL2 = \"drawBuffers\" in gl;\r\n\r\n      let supportLinearFiltering = false;\r\n      let halfFloat = null;\r\n\r\n      if (isWebGL2) {\r\n        (gl as WebGL2RenderingContext).getExtension(\"EXT_color_buffer_float\");\r\n        supportLinearFiltering = !!(gl as WebGL2RenderingContext).getExtension(\r\n          \"OES_texture_float_linear\"\r\n        );\r\n      } else {\r\n        halfFloat = gl.getExtension(\"OES_texture_half_float\");\r\n        supportLinearFiltering = !!gl.getExtension(\r\n          \"OES_texture_half_float_linear\"\r\n        );\r\n      }\r\n\r\n      gl.clearColor(0, 0, 0, 1);\r\n\r\n      const halfFloatTexType = isWebGL2\r\n        ? (gl as WebGL2RenderingContext).HALF_FLOAT\r\n        : (halfFloat && (halfFloat as any).HALF_FLOAT_OES) || 0;\r\n\r\n      let formatRGBA: any;\r\n      let formatRG: any;\r\n      let formatR: any;\r\n\r\n      if (isWebGL2) {\r\n        formatRGBA = getSupportedFormat(\r\n          gl,\r\n          (gl as WebGL2RenderingContext).RGBA16F,\r\n          gl.RGBA,\r\n          halfFloatTexType\r\n        );\r\n        formatRG = getSupportedFormat(\r\n          gl,\r\n          (gl as WebGL2RenderingContext).RG16F,\r\n          (gl as WebGL2RenderingContext).RG,\r\n          halfFloatTexType\r\n        );\r\n        formatR = getSupportedFormat(\r\n          gl,\r\n          (gl as WebGL2RenderingContext).R16F,\r\n          (gl as WebGL2RenderingContext).RED,\r\n          halfFloatTexType\r\n        );\r\n      } else {\r\n        formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n        formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n        formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n      }\r\n\r\n      return {\r\n        gl,\r\n        ext: {\r\n          formatRGBA,\r\n          formatRG,\r\n          formatR,\r\n          halfFloatTexType,\r\n          supportLinearFiltering,\r\n        },\r\n      };\r\n    }\r\n\r\n    function getSupportedFormat(\r\n      gl: WebGLRenderingContext | WebGL2RenderingContext,\r\n      internalFormat: number,\r\n      format: number,\r\n      type: number\r\n    ): { internalFormat: number; format: number } | null {\r\n      if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\r\n        if (\"drawBuffers\" in gl) {\r\n          const gl2 = gl as WebGL2RenderingContext;\r\n          switch (internalFormat) {\r\n            case gl2.R16F:\r\n              return getSupportedFormat(gl2, gl2.RG16F, gl2.RG, type);\r\n            case gl2.RG16F:\r\n              return getSupportedFormat(gl2, gl2.RGBA16F, gl2.RGBA, type);\r\n            default:\r\n              return null;\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      return { internalFormat, format };\r\n    }\r\n\r\n    function supportRenderTextureFormat(\r\n      gl: WebGLRenderingContext | WebGL2RenderingContext,\r\n      internalFormat: number,\r\n      format: number,\r\n      type: number\r\n    ) {\r\n      const texture = gl.createTexture();\r\n      if (!texture) return false;\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,\r\n        internalFormat,\r\n        4,\r\n        4,\r\n        0,\r\n        format,\r\n        type,\r\n        null\r\n      );\r\n\r\n      const fbo = gl.createFramebuffer();\r\n      if (!fbo) return false;\r\n\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n      gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER,\r\n        gl.COLOR_ATTACHMENT0,\r\n        gl.TEXTURE_2D,\r\n        texture,\r\n        0\r\n      );\r\n      const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n      return status === gl.FRAMEBUFFER_COMPLETE;\r\n    }\r\n\r\n    function hashCode(s: string) {\r\n      if (!s.length) return 0;\r\n      let hash = 0;\r\n      for (let i = 0; i < s.length; i++) {\r\n        hash = (hash << 5) - hash + s.charCodeAt(i);\r\n        hash |= 0;\r\n      }\r\n      return hash;\r\n    }\r\n\r\n    function addKeywords(source: string, keywords: string[] | null) {\r\n      if (!keywords) return source;\r\n      let keywordsString = \"\";\r\n      for (const keyword of keywords) {\r\n        keywordsString += `#define ${keyword}\\n`;\r\n      }\r\n      return keywordsString + source;\r\n    }\r\n\r\n    function compileShader(\r\n      type: number,\r\n      source: string,\r\n      keywords: string[] | null = null\r\n    ): WebGLShader | null {\r\n      const shaderSource = addKeywords(source, keywords);\r\n      const shader = gl.createShader(type);\r\n      if (!shader) return null;\r\n      gl.shaderSource(shader, shaderSource);\r\n      gl.compileShader(shader);\r\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.trace(gl.getShaderInfoLog(shader));\r\n      }\r\n      return shader;\r\n    }\r\n\r\n    function createProgram(\r\n      vertexShader: WebGLShader | null,\r\n      fragmentShader: WebGLShader | null\r\n    ): WebGLProgram | null {\r\n      if (!vertexShader || !fragmentShader) return null;\r\n      const program = gl.createProgram();\r\n      if (!program) return null;\r\n      gl.attachShader(program, vertexShader);\r\n      gl.attachShader(program, fragmentShader);\r\n      gl.linkProgram(program);\r\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        console.trace(gl.getProgramInfoLog(program));\r\n      }\r\n      return program;\r\n    }\r\n\r\n    function getUniforms(program: WebGLProgram) {\r\n      let uniforms: Record<string, WebGLUniformLocation | null> = {};\r\n      const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n      for (let i = 0; i < uniformCount; i++) {\r\n        const uniformInfo = gl.getActiveUniform(program, i);\r\n        if (uniformInfo) {\r\n          uniforms[uniformInfo.name] = gl.getUniformLocation(\r\n            program,\r\n            uniformInfo.name\r\n          );\r\n        }\r\n      }\r\n      return uniforms;\r\n    }\r\n\r\n    class Program {\r\n      program: WebGLProgram | null;\r\n      uniforms: Record<string, WebGLUniformLocation | null>;\r\n\r\n      constructor(\r\n        vertexShader: WebGLShader | null,\r\n        fragmentShader: WebGLShader | null\r\n      ) {\r\n        this.program = createProgram(vertexShader, fragmentShader);\r\n        this.uniforms = this.program ? getUniforms(this.program) : {};\r\n      }\r\n\r\n      bind() {\r\n        if (this.program) gl.useProgram(this.program);\r\n      }\r\n    }\r\n\r\n    class Material {\r\n      vertexShader: WebGLShader | null;\r\n      fragmentShaderSource: string;\r\n      programs: Record<number, WebGLProgram | null>;\r\n      activeProgram: WebGLProgram | null;\r\n      uniforms: Record<string, WebGLUniformLocation | null>;\r\n\r\n      constructor(\r\n        vertexShader: WebGLShader | null,\r\n        fragmentShaderSource: string\r\n      ) {\r\n        this.vertexShader = vertexShader;\r\n        this.fragmentShaderSource = fragmentShaderSource;\r\n        this.programs = {};\r\n        this.activeProgram = null;\r\n        this.uniforms = {};\r\n      }\r\n\r\n      setKeywords(keywords: string[]) {\r\n        let hash = 0;\r\n        for (const kw of keywords) {\r\n          hash += hashCode(kw);\r\n        }\r\n        let program = this.programs[hash];\r\n        if (program == null) {\r\n          const fragmentShader = compileShader(\r\n            gl.FRAGMENT_SHADER,\r\n            this.fragmentShaderSource,\r\n            keywords\r\n          );\r\n          program = createProgram(this.vertexShader, fragmentShader);\r\n          this.programs[hash] = program;\r\n        }\r\n        if (program === this.activeProgram) return;\r\n        if (program) {\r\n          this.uniforms = getUniforms(program);\r\n        }\r\n        this.activeProgram = program;\r\n      }\r\n\r\n      bind() {\r\n        if (this.activeProgram) {\r\n          gl.useProgram(this.activeProgram);\r\n        }\r\n      }\r\n    }\r\n\r\n    const baseVertexShader = compileShader(\r\n      gl.VERTEX_SHADER,\r\n      `\r\n      precision highp float;\r\n      attribute vec2 aPosition;\r\n      varying vec2 vUv;\r\n      varying vec2 vL;\r\n      varying vec2 vR;\r\n      varying vec2 vT;\r\n      varying vec2 vB;\r\n      uniform vec2 texelSize;\r\n\r\n      void main () {\r\n        vUv = aPosition * 0.5 + 0.5;\r\n        vL = vUv - vec2(texelSize.x, 0.0);\r\n        vR = vUv + vec2(texelSize.x, 0.0);\r\n        vT = vUv + vec2(0.0, texelSize.y);\r\n        vB = vUv - vec2(0.0, texelSize.y);\r\n        gl_Position = vec4(aPosition, 0.0, 1.0);\r\n      }\r\n    `\r\n    );\r\n\r\n    const copyShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision mediump float;\r\n      precision mediump sampler2D;\r\n      varying highp vec2 vUv;\r\n      uniform sampler2D uTexture;\r\n\r\n      void main () {\r\n          gl_FragColor = texture2D(uTexture, vUv);\r\n      }\r\n    `\r\n    );\r\n\r\n    const clearShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision mediump float;\r\n      precision mediump sampler2D;\r\n      varying highp vec2 vUv;\r\n      uniform sampler2D uTexture;\r\n      uniform float value;\r\n\r\n      void main () {\r\n          gl_FragColor = value * texture2D(uTexture, vUv);\r\n      }\r\n    `\r\n    );\r\n\r\n    const displayShaderSource = `\r\n      precision highp float;\r\n      precision highp sampler2D;\r\n      varying vec2 vUv;\r\n      varying vec2 vL;\r\n      varying vec2 vR;\r\n      varying vec2 vT;\r\n      varying vec2 vB;\r\n      uniform sampler2D uTexture;\r\n      uniform sampler2D uDithering;\r\n      uniform vec2 ditherScale;\r\n      uniform vec2 texelSize;\r\n\r\n      vec3 linearToGamma (vec3 color) {\r\n          color = max(color, vec3(0));\r\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\r\n      }\r\n\r\n      void main () {\r\n          vec3 c = texture2D(uTexture, vUv).rgb;\r\n          #ifdef SHADING\r\n              vec3 lc = texture2D(uTexture, vL).rgb;\r\n              vec3 rc = texture2D(uTexture, vR).rgb;\r\n              vec3 tc = texture2D(uTexture, vT).rgb;\r\n              vec3 bc = texture2D(uTexture, vB).rgb;\r\n\r\n              float dx = length(rc) - length(lc);\r\n              float dy = length(tc) - length(bc);\r\n\r\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\r\n              vec3 l = vec3(0.0, 0.0, 1.0);\r\n\r\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\r\n              c *= diffuse;\r\n          #endif\r\n\r\n          float a = max(c.r, max(c.g, c.b));\r\n          gl_FragColor = vec4(c, a);\r\n      }\r\n    `;\r\n\r\n    const splatShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision highp float;\r\n      precision highp sampler2D;\r\n      varying vec2 vUv;\r\n      uniform sampler2D uTarget;\r\n      uniform float aspectRatio;\r\n      uniform vec3 color;\r\n      uniform vec2 point;\r\n      uniform float radius;\r\n\r\n      void main () {\r\n          vec2 p = vUv - point.xy;\r\n          p.x *= aspectRatio;\r\n          vec3 splat = exp(-dot(p, p) / radius) * color;\r\n          vec3 base = texture2D(uTarget, vUv).xyz;\r\n          gl_FragColor = vec4(base + splat, 1.0);\r\n      }\r\n    `\r\n    );\r\n\r\n    const advectionShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision highp float;\r\n      precision highp sampler2D;\r\n      varying vec2 vUv;\r\n      uniform sampler2D uVelocity;\r\n      uniform sampler2D uSource;\r\n      uniform vec2 texelSize;\r\n      uniform vec2 dyeTexelSize;\r\n      uniform float dt;\r\n      uniform float dissipation;\r\n\r\n      vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\r\n          vec2 st = uv / tsize - 0.5;\r\n          vec2 iuv = floor(st);\r\n          vec2 fuv = fract(st);\r\n\r\n          vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\r\n          vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\r\n          vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\r\n          vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\r\n\r\n          return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\r\n      }\r\n\r\n      void main () {\r\n          #ifdef MANUAL_FILTERING\r\n              vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\r\n              vec4 result = bilerp(uSource, coord, dyeTexelSize);\r\n          #else\r\n              vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\r\n              vec4 result = texture2D(uSource, coord);\r\n          #endif\r\n          float decay = 1.0 + dissipation * dt;\r\n          gl_FragColor = result / decay;\r\n      }\r\n    `,\r\n      ext.supportLinearFiltering ? null : [\"MANUAL_FILTERING\"]\r\n    );\r\n\r\n    const divergenceShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision mediump float;\r\n      precision mediump sampler2D;\r\n      varying highp vec2 vUv;\r\n      varying highp vec2 vL;\r\n      varying highp vec2 vR;\r\n      varying highp vec2 vT;\r\n      varying highp vec2 vB;\r\n      uniform sampler2D uVelocity;\r\n\r\n      void main () {\r\n          float L = texture2D(uVelocity, vL).x;\r\n          float R = texture2D(uVelocity, vR).x;\r\n          float T = texture2D(uVelocity, vT).y;\r\n          float B = texture2D(uVelocity, vB).y;\r\n\r\n          vec2 C = texture2D(uVelocity, vUv).xy;\r\n          if (vL.x < 0.0) { L = -C.x; }\r\n          if (vR.x > 1.0) { R = -C.x; }\r\n          if (vT.y > 1.0) { T = -C.y; }\r\n          if (vB.y < 0.0) { B = -C.y; }\r\n\r\n          float div = 0.5 * (R - L + T - B);\r\n          gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\r\n      }\r\n    `\r\n    );\r\n\r\n    const curlShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision mediump float;\r\n      precision mediump sampler2D;\r\n      varying highp vec2 vUv;\r\n      varying highp vec2 vL;\r\n      varying highp vec2 vR;\r\n      varying highp vec2 vT;\r\n      varying highp vec2 vB;\r\n      uniform sampler2D uVelocity;\r\n\r\n      void main () {\r\n          float L = texture2D(uVelocity, vL).y;\r\n          float R = texture2D(uVelocity, vR).y;\r\n          float T = texture2D(uVelocity, vT).x;\r\n          float B = texture2D(uVelocity, vB).x;\r\n          float vorticity = R - L - T + B;\r\n          gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\r\n      }\r\n    `\r\n    );\r\n\r\n    const vorticityShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision highp float;\r\n      precision highp sampler2D;\r\n      varying vec2 vUv;\r\n      varying vec2 vL;\r\n      varying vec2 vR;\r\n      varying vec2 vT;\r\n      varying vec2 vB;\r\n      uniform sampler2D uVelocity;\r\n      uniform sampler2D uCurl;\r\n      uniform float curl;\r\n      uniform float dt;\r\n\r\n      void main () {\r\n          float L = texture2D(uCurl, vL).x;\r\n          float R = texture2D(uCurl, vR).x;\r\n          float T = texture2D(uCurl, vT).x;\r\n          float B = texture2D(uCurl, vB).x;\r\n          float C = texture2D(uCurl, vUv).x;\r\n\r\n          vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\r\n          force /= length(force) + 0.0001;\r\n          force *= curl * C;\r\n          force.y *= -1.0;\r\n\r\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\r\n          velocity += force * dt;\r\n          velocity = min(max(velocity, -1000.0), 1000.0);\r\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\r\n      }\r\n    `\r\n    );\r\n\r\n    const pressureShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision mediump float;\r\n      precision mediump sampler2D;\r\n      varying highp vec2 vUv;\r\n      varying highp vec2 vL;\r\n      varying highp vec2 vR;\r\n      varying highp vec2 vT;\r\n      varying highp vec2 vB;\r\n      uniform sampler2D uPressure;\r\n      uniform sampler2D uDivergence;\r\n\r\n      void main () {\r\n          float L = texture2D(uPressure, vL).x;\r\n          float R = texture2D(uPressure, vR).x;\r\n          float T = texture2D(uPressure, vT).x;\r\n          float B = texture2D(uPressure, vB).x;\r\n          float C = texture2D(uPressure, vUv).x;\r\n          float divergence = texture2D(uDivergence, vUv).x;\r\n          float pressure = (L + R + B + T - divergence) * 0.25;\r\n          gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\r\n      }\r\n    `\r\n    );\r\n\r\n    const gradientSubtractShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision mediump float;\r\n      precision mediump sampler2D;\r\n      varying highp vec2 vUv;\r\n      varying highp vec2 vL;\r\n      varying highp vec2 vR;\r\n      varying highp vec2 vT;\r\n      varying highp vec2 vB;\r\n      uniform sampler2D uPressure;\r\n      uniform sampler2D uVelocity;\r\n\r\n      void main () {\r\n          float L = texture2D(uPressure, vL).x;\r\n          float R = texture2D(uPressure, vR).x;\r\n          float T = texture2D(uPressure, vT).x;\r\n          float B = texture2D(uPressure, vB).x;\r\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\r\n          velocity.xy -= vec2(R - L, T - B);\r\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\r\n      }\r\n    `\r\n    );\r\n\r\n    const blit = (() => {\r\n      const buffer = gl.createBuffer()!;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n      gl.bufferData(\r\n        gl.ARRAY_BUFFER,\r\n        new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]),\r\n        gl.STATIC_DRAW\r\n      );\r\n      const elemBuffer = gl.createBuffer()!;\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elemBuffer);\r\n      gl.bufferData(\r\n        gl.ELEMENT_ARRAY_BUFFER,\r\n        new Uint16Array([0, 1, 2, 0, 2, 3]),\r\n        gl.STATIC_DRAW\r\n      );\r\n      gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\r\n      gl.enableVertexAttribArray(0);\r\n\r\n      return (target: FBO | null, doClear = false) => {\r\n        if (!gl) return;\r\n        if (!target) {\r\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n          gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        } else {\r\n          gl.viewport(0, 0, target.width, target.height);\r\n          gl.bindFramebuffer(gl.FRAMEBUFFER, target.fbo);\r\n        }\r\n        if (doClear) {\r\n          gl.clearColor(0, 0, 0, 1);\r\n          gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\r\n      };\r\n    })();\r\n\r\n    interface FBO {\r\n      texture: WebGLTexture;\r\n      fbo: WebGLFramebuffer;\r\n      width: number;\r\n      height: number;\r\n      texelSizeX: number;\r\n      texelSizeY: number;\r\n      attach: (id: number) => number;\r\n    }\r\n\r\n    interface DoubleFBO {\r\n      width: number;\r\n      height: number;\r\n      texelSizeX: number;\r\n      texelSizeY: number;\r\n      read: FBO;\r\n      write: FBO;\r\n      swap: () => void;\r\n    }\r\n\r\n    let dye: DoubleFBO;\r\n    let velocity: DoubleFBO;\r\n    let divergence: FBO;\r\n    let curl: FBO;\r\n    let pressure: DoubleFBO;\r\n\r\n    const copyProgram = new Program(baseVertexShader, copyShader);\r\n    const clearProgram = new Program(baseVertexShader, clearShader);\r\n    const splatProgram = new Program(baseVertexShader, splatShader);\r\n    const advectionProgram = new Program(baseVertexShader, advectionShader);\r\n    const divergenceProgram = new Program(baseVertexShader, divergenceShader);\r\n    const curlProgram = new Program(baseVertexShader, curlShader);\r\n    const vorticityProgram = new Program(baseVertexShader, vorticityShader);\r\n    const pressureProgram = new Program(baseVertexShader, pressureShader);\r\n    const gradienSubtractProgram = new Program(\r\n      baseVertexShader,\r\n      gradientSubtractShader\r\n    );\r\n    const displayMaterial = new Material(baseVertexShader, displayShaderSource);\r\n\r\n    function createFBO(\r\n      w: number,\r\n      h: number,\r\n      internalFormat: number,\r\n      format: number,\r\n      type: number,\r\n      param: number\r\n    ): FBO {\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      const texture = gl.createTexture()!;\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,\r\n        internalFormat,\r\n        w,\r\n        h,\r\n        0,\r\n        format,\r\n        type,\r\n        null\r\n      );\r\n      const fbo = gl.createFramebuffer()!;\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n      gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER,\r\n        gl.COLOR_ATTACHMENT0,\r\n        gl.TEXTURE_2D,\r\n        texture,\r\n        0\r\n      );\r\n      gl.viewport(0, 0, w, h);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      const texelSizeX = 1 / w;\r\n      const texelSizeY = 1 / h;\r\n\r\n      return {\r\n        texture,\r\n        fbo,\r\n        width: w,\r\n        height: h,\r\n        texelSizeX,\r\n        texelSizeY,\r\n        attach(id: number) {\r\n          gl.activeTexture(gl.TEXTURE0 + id);\r\n          gl.bindTexture(gl.TEXTURE_2D, texture);\r\n          return id;\r\n        },\r\n      };\r\n    }\r\n\r\n    function createDoubleFBO(\r\n      w: number,\r\n      h: number,\r\n      internalFormat: number,\r\n      format: number,\r\n      type: number,\r\n      param: number\r\n    ): DoubleFBO {\r\n      const fbo1 = createFBO(w, h, internalFormat, format, type, param);\r\n      const fbo2 = createFBO(w, h, internalFormat, format, type, param);\r\n      return {\r\n        width: w,\r\n        height: h,\r\n        texelSizeX: fbo1.texelSizeX,\r\n        texelSizeY: fbo1.texelSizeY,\r\n        read: fbo1,\r\n        write: fbo2,\r\n        swap() {\r\n          const tmp = this.read;\r\n          this.read = this.write;\r\n          this.write = tmp;\r\n        },\r\n      };\r\n    }\r\n\r\n    function resizeFBO(\r\n      target: FBO,\r\n      w: number,\r\n      h: number,\r\n      internalFormat: number,\r\n      format: number,\r\n      type: number,\r\n      param: number\r\n    ) {\r\n      const newFBO = createFBO(w, h, internalFormat, format, type, param);\r\n      copyProgram.bind();\r\n      if (copyProgram.uniforms.uTexture)\r\n        gl.uniform1i(copyProgram.uniforms.uTexture, target.attach(0));\r\n      blit(newFBO, false);\r\n      return newFBO;\r\n    }\r\n\r\n    function resizeDoubleFBO(\r\n      target: DoubleFBO,\r\n      w: number,\r\n      h: number,\r\n      internalFormat: number,\r\n      format: number,\r\n      type: number,\r\n      param: number\r\n    ) {\r\n      if (target.width === w && target.height === h) return target;\r\n      target.read = resizeFBO(\r\n        target.read,\r\n        w,\r\n        h,\r\n        internalFormat,\r\n        format,\r\n        type,\r\n        param\r\n      );\r\n      target.write = createFBO(w, h, internalFormat, format, type, param);\r\n      target.width = w;\r\n      target.height = h;\r\n      target.texelSizeX = 1 / w;\r\n      target.texelSizeY = 1 / h;\r\n      return target;\r\n    }\r\n\r\n    function initFramebuffers() {\r\n      const simRes = getResolution(config.SIM_RESOLUTION!);\r\n      const dyeRes = getResolution(config.DYE_RESOLUTION!);\r\n\r\n      const texType = ext.halfFloatTexType;\r\n      const rgba = ext.formatRGBA;\r\n      const rg = ext.formatRG;\r\n      const r = ext.formatR;\r\n      const filtering = ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST;\r\n      gl.disable(gl.BLEND);\r\n\r\n      if (!dye) {\r\n        dye = createDoubleFBO(\r\n          dyeRes.width,\r\n          dyeRes.height,\r\n          rgba.internalFormat,\r\n          rgba.format,\r\n          texType,\r\n          filtering\r\n        );\r\n      } else {\r\n        dye = resizeDoubleFBO(\r\n          dye,\r\n          dyeRes.width,\r\n          dyeRes.height,\r\n          rgba.internalFormat,\r\n          rgba.format,\r\n          texType,\r\n          filtering\r\n        );\r\n      }\r\n\r\n      if (!velocity) {\r\n        velocity = createDoubleFBO(\r\n          simRes.width,\r\n          simRes.height,\r\n          rg.internalFormat,\r\n          rg.format,\r\n          texType,\r\n          filtering\r\n        );\r\n      } else {\r\n        velocity = resizeDoubleFBO(\r\n          velocity,\r\n          simRes.width,\r\n          simRes.height,\r\n          rg.internalFormat,\r\n          rg.format,\r\n          texType,\r\n          filtering\r\n        );\r\n      }\r\n\r\n      divergence = createFBO(\r\n        simRes.width,\r\n        simRes.height,\r\n        r.internalFormat,\r\n        r.format,\r\n        texType,\r\n        gl.NEAREST\r\n      );\r\n      curl = createFBO(\r\n        simRes.width,\r\n        simRes.height,\r\n        r.internalFormat,\r\n        r.format,\r\n        texType,\r\n        gl.NEAREST\r\n      );\r\n      pressure = createDoubleFBO(\r\n        simRes.width,\r\n        simRes.height,\r\n        r.internalFormat,\r\n        r.format,\r\n        texType,\r\n        gl.NEAREST\r\n      );\r\n    }\r\n\r\n    function updateKeywords() {\r\n      const displayKeywords: string[] = [];\r\n      if (config.SHADING) displayKeywords.push(\"SHADING\");\r\n      displayMaterial.setKeywords(displayKeywords);\r\n    }\r\n\r\n    function getResolution(resolution: number) {\r\n      const w = gl.drawingBufferWidth;\r\n      const h = gl.drawingBufferHeight;\r\n      const aspectRatio = w / h;\r\n      let aspect = aspectRatio < 1 ? 1 / aspectRatio : aspectRatio;\r\n      const min = Math.round(resolution);\r\n      const max = Math.round(resolution * aspect);\r\n      if (w > h) {\r\n        return { width: max, height: min };\r\n      }\r\n      return { width: min, height: max };\r\n    }\r\n\r\n    function scaleByPixelRatio(input: number) {\r\n      const pixelRatio = window.devicePixelRatio || 1;\r\n      return Math.floor(input * pixelRatio);\r\n    }\r\n\r\n    updateKeywords();\r\n    initFramebuffers();\r\n\r\n    let lastUpdateTime = Date.now();\r\n    let colorUpdateTimer = 0.0;\r\n\r\n    function updateFrame() {\r\n      const dt = calcDeltaTime();\r\n      if (resizeCanvas()) initFramebuffers();\r\n      updateColors(dt);\r\n      applyInputs();\r\n      step(dt);\r\n      render(null);\r\n      requestAnimationFrame(updateFrame);\r\n    }\r\n\r\n    function calcDeltaTime() {\r\n      const now = Date.now();\r\n      let dt = (now - lastUpdateTime) / 1000;\r\n      dt = Math.min(dt, 0.016666);\r\n      lastUpdateTime = now;\r\n      return dt;\r\n    }\r\n\r\n    function resizeCanvas() {\r\n      const width = scaleByPixelRatio(canvas!.clientWidth);\r\n      const height = scaleByPixelRatio(canvas!.clientHeight);\r\n      if (canvas!.width !== width || canvas!.height !== height) {\r\n        canvas!.width = width;\r\n        canvas!.height = height;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    function updateColors(dt: number) {\r\n      colorUpdateTimer += dt * config.COLOR_UPDATE_SPEED;\r\n      if (colorUpdateTimer >= 1) {\r\n        colorUpdateTimer = wrap(colorUpdateTimer, 0, 1);\r\n        pointers.forEach((p) => {\r\n          p.color = generateColor();\r\n        });\r\n      }\r\n    }\r\n\r\n    function applyInputs() {\r\n      for (const p of pointers) {\r\n        if (p.moved) {\r\n          p.moved = false;\r\n          splatPointer(p);\r\n        }\r\n      }\r\n    }\r\n\r\n    function step(dt: number) {\r\n      gl.disable(gl.BLEND);\r\n\r\n      curlProgram.bind();\r\n      if (curlProgram.uniforms.texelSize) {\r\n        gl.uniform2f(\r\n          curlProgram.uniforms.texelSize,\r\n          velocity.texelSizeX,\r\n          velocity.texelSizeY\r\n        );\r\n      }\r\n      if (curlProgram.uniforms.uVelocity) {\r\n        gl.uniform1i(curlProgram.uniforms.uVelocity, velocity.read.attach(0));\r\n      }\r\n      blit(curl);\r\n\r\n      vorticityProgram.bind();\r\n      if (vorticityProgram.uniforms.texelSize) {\r\n        gl.uniform2f(\r\n          vorticityProgram.uniforms.texelSize,\r\n          velocity.texelSizeX,\r\n          velocity.texelSizeY\r\n        );\r\n      }\r\n      if (vorticityProgram.uniforms.uVelocity) {\r\n        gl.uniform1i(\r\n          vorticityProgram.uniforms.uVelocity,\r\n          velocity.read.attach(0)\r\n        );\r\n      }\r\n      if (vorticityProgram.uniforms.uCurl) {\r\n        gl.uniform1i(vorticityProgram.uniforms.uCurl, curl.attach(1));\r\n      }\r\n      if (vorticityProgram.uniforms.curl) {\r\n        gl.uniform1f(vorticityProgram.uniforms.curl, config.CURL);\r\n      }\r\n      if (vorticityProgram.uniforms.dt) {\r\n        gl.uniform1f(vorticityProgram.uniforms.dt, dt);\r\n      }\r\n      blit(velocity.write);\r\n      velocity.swap();\r\n\r\n      divergenceProgram.bind();\r\n      if (divergenceProgram.uniforms.texelSize) {\r\n        gl.uniform2f(\r\n          divergenceProgram.uniforms.texelSize,\r\n          velocity.texelSizeX,\r\n          velocity.texelSizeY\r\n        );\r\n      }\r\n      if (divergenceProgram.uniforms.uVelocity) {\r\n        gl.uniform1i(\r\n          divergenceProgram.uniforms.uVelocity,\r\n          velocity.read.attach(0)\r\n        );\r\n      }\r\n      blit(divergence);\r\n\r\n      clearProgram.bind();\r\n      if (clearProgram.uniforms.uTexture) {\r\n        gl.uniform1i(clearProgram.uniforms.uTexture, pressure.read.attach(0));\r\n      }\r\n      if (clearProgram.uniforms.value) {\r\n        gl.uniform1f(clearProgram.uniforms.value, config.PRESSURE);\r\n      }\r\n      blit(pressure.write);\r\n      pressure.swap();\r\n\r\n      pressureProgram.bind();\r\n      if (pressureProgram.uniforms.texelSize) {\r\n        gl.uniform2f(\r\n          pressureProgram.uniforms.texelSize,\r\n          velocity.texelSizeX,\r\n          velocity.texelSizeY\r\n        );\r\n      }\r\n      if (pressureProgram.uniforms.uDivergence) {\r\n        gl.uniform1i(\r\n          pressureProgram.uniforms.uDivergence,\r\n          divergence.attach(0)\r\n        );\r\n      }\r\n      for (let i = 0; i < config.PRESSURE_ITERATIONS; i++) {\r\n        if (pressureProgram.uniforms.uPressure) {\r\n          gl.uniform1i(\r\n            pressureProgram.uniforms.uPressure,\r\n            pressure.read.attach(1)\r\n          );\r\n        }\r\n        blit(pressure.write);\r\n        pressure.swap();\r\n      }\r\n\r\n      gradienSubtractProgram.bind();\r\n      if (gradienSubtractProgram.uniforms.texelSize) {\r\n        gl.uniform2f(\r\n          gradienSubtractProgram.uniforms.texelSize,\r\n          velocity.texelSizeX,\r\n          velocity.texelSizeY\r\n        );\r\n      }\r\n      if (gradienSubtractProgram.uniforms.uPressure) {\r\n        gl.uniform1i(\r\n          gradienSubtractProgram.uniforms.uPressure,\r\n          pressure.read.attach(0)\r\n        );\r\n      }\r\n      if (gradienSubtractProgram.uniforms.uVelocity) {\r\n        gl.uniform1i(\r\n          gradienSubtractProgram.uniforms.uVelocity,\r\n          velocity.read.attach(1)\r\n        );\r\n      }\r\n      blit(velocity.write);\r\n      velocity.swap();\r\n\r\n      advectionProgram.bind();\r\n      if (advectionProgram.uniforms.texelSize) {\r\n        gl.uniform2f(\r\n          advectionProgram.uniforms.texelSize,\r\n          velocity.texelSizeX,\r\n          velocity.texelSizeY\r\n        );\r\n      }\r\n      if (\r\n        !ext.supportLinearFiltering &&\r\n        advectionProgram.uniforms.dyeTexelSize\r\n      ) {\r\n        gl.uniform2f(\r\n          advectionProgram.uniforms.dyeTexelSize,\r\n          velocity.texelSizeX,\r\n          velocity.texelSizeY\r\n        );\r\n      }\r\n      const velocityId = velocity.read.attach(0);\r\n      if (advectionProgram.uniforms.uVelocity) {\r\n        gl.uniform1i(advectionProgram.uniforms.uVelocity, velocityId);\r\n      }\r\n      if (advectionProgram.uniforms.uSource) {\r\n        gl.uniform1i(advectionProgram.uniforms.uSource, velocityId);\r\n      }\r\n      if (advectionProgram.uniforms.dt) {\r\n        gl.uniform1f(advectionProgram.uniforms.dt, dt);\r\n      }\r\n      if (advectionProgram.uniforms.dissipation) {\r\n        gl.uniform1f(\r\n          advectionProgram.uniforms.dissipation,\r\n          config.VELOCITY_DISSIPATION\r\n        );\r\n      }\r\n      blit(velocity.write);\r\n      velocity.swap();\r\n\r\n      if (\r\n        !ext.supportLinearFiltering &&\r\n        advectionProgram.uniforms.dyeTexelSize\r\n      ) {\r\n        gl.uniform2f(\r\n          advectionProgram.uniforms.dyeTexelSize,\r\n          dye.texelSizeX,\r\n          dye.texelSizeY\r\n        );\r\n      }\r\n      if (advectionProgram.uniforms.uVelocity) {\r\n        gl.uniform1i(\r\n          advectionProgram.uniforms.uVelocity,\r\n          velocity.read.attach(0)\r\n        );\r\n      }\r\n      if (advectionProgram.uniforms.uSource) {\r\n        gl.uniform1i(advectionProgram.uniforms.uSource, dye.read.attach(1));\r\n      }\r\n      if (advectionProgram.uniforms.dissipation) {\r\n        gl.uniform1f(\r\n          advectionProgram.uniforms.dissipation,\r\n          config.DENSITY_DISSIPATION\r\n        );\r\n      }\r\n      blit(dye.write);\r\n      dye.swap();\r\n    }\r\n\r\n    function render(target: FBO | null) {\r\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n      gl.enable(gl.BLEND);\r\n      drawDisplay(target);\r\n    }\r\n\r\n    function drawDisplay(target: FBO | null) {\r\n      const width = target ? target.width : gl.drawingBufferWidth;\r\n      const height = target ? target.height : gl.drawingBufferHeight;\r\n      displayMaterial.bind();\r\n      if (config.SHADING && displayMaterial.uniforms.texelSize) {\r\n        gl.uniform2f(displayMaterial.uniforms.texelSize, 1 / width, 1 / height);\r\n      }\r\n      if (displayMaterial.uniforms.uTexture) {\r\n        gl.uniform1i(displayMaterial.uniforms.uTexture, dye.read.attach(0));\r\n      }\r\n      blit(target, false);\r\n    }\r\n\r\n    function splatPointer(pointer: Pointer) {\r\n      const dx = pointer.deltaX * config.SPLAT_FORCE;\r\n      const dy = pointer.deltaY * config.SPLAT_FORCE;\r\n      splat(pointer.texcoordX, pointer.texcoordY, dx, dy, pointer.color);\r\n    }\r\n\r\n    function clickSplat(pointer: Pointer) {\r\n      const color = generateColor();\r\n      color.r *= 10;\r\n      color.g *= 10;\r\n      color.b *= 10;\r\n      const dx = 10 * (Math.random() - 0.5);\r\n      const dy = 30 * (Math.random() - 0.5);\r\n      splat(pointer.texcoordX, pointer.texcoordY, dx, dy, color);\r\n    }\r\n\r\n    function splat(\r\n      x: number,\r\n      y: number,\r\n      dx: number,\r\n      dy: number,\r\n      color: ColorRGB\r\n    ) {\r\n      splatProgram.bind();\r\n      if (splatProgram.uniforms.uTarget) {\r\n        gl.uniform1i(splatProgram.uniforms.uTarget, velocity.read.attach(0));\r\n      }\r\n      if (splatProgram.uniforms.aspectRatio) {\r\n        gl.uniform1f(\r\n          splatProgram.uniforms.aspectRatio,\r\n          canvas!.width / canvas!.height\r\n        );\r\n      }\r\n      if (splatProgram.uniforms.point) {\r\n        gl.uniform2f(splatProgram.uniforms.point, x, y);\r\n      }\r\n      if (splatProgram.uniforms.color) {\r\n        gl.uniform3f(splatProgram.uniforms.color, dx, dy, 0);\r\n      }\r\n      if (splatProgram.uniforms.radius) {\r\n        gl.uniform1f(\r\n          splatProgram.uniforms.radius,\r\n          correctRadius(config.SPLAT_RADIUS / 100)!\r\n        );\r\n      }\r\n      blit(velocity.write);\r\n      velocity.swap();\r\n\r\n      if (splatProgram.uniforms.uTarget) {\r\n        gl.uniform1i(splatProgram.uniforms.uTarget, dye.read.attach(0));\r\n      }\r\n      if (splatProgram.uniforms.color) {\r\n        gl.uniform3f(splatProgram.uniforms.color, color.r, color.g, color.b);\r\n      }\r\n      blit(dye.write);\r\n      dye.swap();\r\n    }\r\n\r\n    function correctRadius(radius: number) {\r\n      const aspectRatio = canvas!.width / canvas!.height;\r\n      if (aspectRatio > 1) radius *= aspectRatio;\r\n      return radius;\r\n    }\r\n\r\n    function updatePointerDownData(\r\n      pointer: Pointer,\r\n      id: number,\r\n      posX: number,\r\n      posY: number\r\n    ) {\r\n      pointer.id = id;\r\n      pointer.down = true;\r\n      pointer.moved = false;\r\n      pointer.texcoordX = posX / canvas!.width;\r\n      pointer.texcoordY = 1 - posY / canvas!.height;\r\n      pointer.prevTexcoordX = pointer.texcoordX;\r\n      pointer.prevTexcoordY = pointer.texcoordY;\r\n      pointer.deltaX = 0;\r\n      pointer.deltaY = 0;\r\n      pointer.color = generateColor();\r\n    }\r\n\r\n    function updatePointerMoveData(\r\n      pointer: Pointer,\r\n      posX: number,\r\n      posY: number,\r\n      color: ColorRGB\r\n    ) {\r\n      pointer.prevTexcoordX = pointer.texcoordX;\r\n      pointer.prevTexcoordY = pointer.texcoordY;\r\n      pointer.texcoordX = posX / canvas!.width;\r\n      pointer.texcoordY = 1 - posY / canvas!.height;\r\n      pointer.deltaX = correctDeltaX(\r\n        pointer.texcoordX - pointer.prevTexcoordX\r\n      )!;\r\n      pointer.deltaY = correctDeltaY(\r\n        pointer.texcoordY - pointer.prevTexcoordY\r\n      )!;\r\n      pointer.moved =\r\n        Math.abs(pointer.deltaX) > 0 || Math.abs(pointer.deltaY) > 0;\r\n      pointer.color = color;\r\n    }\r\n\r\n    function updatePointerUpData(pointer: Pointer) {\r\n      pointer.down = false;\r\n    }\r\n\r\n    function correctDeltaX(delta: number) {\r\n      const aspectRatio = canvas!.width / canvas!.height;\r\n      if (aspectRatio < 1) delta *= aspectRatio;\r\n      return delta;\r\n    }\r\n\r\n    function correctDeltaY(delta: number) {\r\n      const aspectRatio = canvas!.width / canvas!.height;\r\n      if (aspectRatio > 1) delta /= aspectRatio;\r\n      return delta;\r\n    }\r\n\r\n    function generateColor(): ColorRGB {\r\n      const c = HSVtoRGB(Math.random(), 1.0, 1.0);\r\n      c.r *= 0.15;\r\n      c.g *= 0.15;\r\n      c.b *= 0.15;\r\n      return c;\r\n    }\r\n\r\n    function HSVtoRGB(h: number, s: number, v: number): ColorRGB {\r\n      let r = 0,\r\n        g = 0,\r\n        b = 0;\r\n      const i = Math.floor(h * 6);\r\n      const f = h * 6 - i;\r\n      const p = v * (1 - s);\r\n      const q = v * (1 - f * s);\r\n      const t = v * (1 - (1 - f) * s);\r\n\r\n      switch (i % 6) {\r\n        case 0:\r\n          r = v;\r\n          g = t;\r\n          b = p;\r\n          break;\r\n        case 1:\r\n          r = q;\r\n          g = v;\r\n          b = p;\r\n          break;\r\n        case 2:\r\n          r = p;\r\n          g = v;\r\n          b = t;\r\n          break;\r\n        case 3:\r\n          r = p;\r\n          g = q;\r\n          b = v;\r\n          break;\r\n        case 4:\r\n          r = t;\r\n          g = p;\r\n          b = v;\r\n          break;\r\n        case 5:\r\n          r = v;\r\n          g = p;\r\n          b = q;\r\n          break;\r\n      }\r\n      return { r, g, b };\r\n    }\r\n\r\n    function wrap(value: number, min: number, max: number) {\r\n      const range = max - min;\r\n      if (range === 0) return min;\r\n      return ((value - min) % range) + min;\r\n    }\r\n\r\n    window.addEventListener(\"mousedown\", (e) => {\r\n      const pointer = pointers[0];\r\n      const posX = scaleByPixelRatio(e.clientX);\r\n      const posY = scaleByPixelRatio(e.clientY);\r\n      updatePointerDownData(pointer, -1, posX, posY);\r\n      clickSplat(pointer);\r\n    });\r\n\r\n    function handleFirstMouseMove(e: MouseEvent) {\r\n      const pointer = pointers[0];\r\n      const posX = scaleByPixelRatio(e.clientX);\r\n      const posY = scaleByPixelRatio(e.clientY);\r\n      const color = generateColor();\r\n      updateFrame();\r\n      updatePointerMoveData(pointer, posX, posY, color);\r\n      document.body.removeEventListener(\"mousemove\", handleFirstMouseMove);\r\n    }\r\n    document.body.addEventListener(\"mousemove\", handleFirstMouseMove);\r\n\r\n    window.addEventListener(\"mousemove\", (e) => {\r\n      const pointer = pointers[0];\r\n      const posX = scaleByPixelRatio(e.clientX);\r\n      const posY = scaleByPixelRatio(e.clientY);\r\n      const color = pointer.color;\r\n      updatePointerMoveData(pointer, posX, posY, color);\r\n    });\r\n\r\n    function handleFirstTouchStart(e: TouchEvent) {\r\n      const touches = e.targetTouches;\r\n      const pointer = pointers[0];\r\n      for (let i = 0; i < touches.length; i++) {\r\n        const posX = scaleByPixelRatio(touches[i].clientX);\r\n        const posY = scaleByPixelRatio(touches[i].clientY);\r\n        updateFrame();\r\n        updatePointerDownData(pointer, touches[i].identifier, posX, posY);\r\n      }\r\n      document.body.removeEventListener(\"touchstart\", handleFirstTouchStart);\r\n    }\r\n    document.body.addEventListener(\"touchstart\", handleFirstTouchStart);\r\n\r\n    window.addEventListener(\r\n      \"touchstart\",\r\n      (e) => {\r\n        const touches = e.targetTouches;\r\n        const pointer = pointers[0];\r\n        for (let i = 0; i < touches.length; i++) {\r\n          const posX = scaleByPixelRatio(touches[i].clientX);\r\n          const posY = scaleByPixelRatio(touches[i].clientY);\r\n          updatePointerDownData(pointer, touches[i].identifier, posX, posY);\r\n        }\r\n      },\r\n      false\r\n    );\r\n\r\n    window.addEventListener(\r\n      \"touchmove\",\r\n      (e) => {\r\n        const touches = e.targetTouches;\r\n        const pointer = pointers[0];\r\n        for (let i = 0; i < touches.length; i++) {\r\n          const posX = scaleByPixelRatio(touches[i].clientX);\r\n          const posY = scaleByPixelRatio(touches[i].clientY);\r\n          updatePointerMoveData(pointer, posX, posY, pointer.color);\r\n        }\r\n      },\r\n      false\r\n    );\r\n\r\n    window.addEventListener(\"touchend\", (e) => {\r\n      const touches = e.changedTouches;\r\n      const pointer = pointers[0];\r\n      for (let i = 0; i < touches.length; i++) {\r\n        updatePointerUpData(pointer);\r\n      }\r\n    });\r\n  }, [\r\n    SIM_RESOLUTION,\r\n    DYE_RESOLUTION,\r\n    CAPTURE_RESOLUTION,\r\n    DENSITY_DISSIPATION,\r\n    VELOCITY_DISSIPATION,\r\n    PRESSURE,\r\n    PRESSURE_ITERATIONS,\r\n    CURL,\r\n    SPLAT_RADIUS,\r\n    SPLAT_FORCE,\r\n    SHADING,\r\n    COLOR_UPDATE_SPEED,\r\n    BACK_COLOR,\r\n    TRANSPARENT,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 z-50 pointer-events-none w-full h-full\">\r\n      <canvas ref={canvasRef} id=\"fluid\" className=\"w-screen h-screen block\"></canvas>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1088, "column": 0}, "map": {"version":3,"sources":["file:///D:/react/OMK/omk/src/components/rotatingtext.tsx"],"sourcesContent":["import React, {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  motion,\r\n  AnimatePresence,\r\n  type Transition,\r\n  type VariantLabels,\r\n  type Target,\r\n  type TargetAndTransition,\r\n} from \"framer-motion\";\r\n\r\nfunction cn(...classes: (string | undefined | null | boolean)[]): string {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport interface RotatingTextRef {\r\n  next: () => void;\r\n  previous: () => void;\r\n  jumpTo: (index: number) => void;\r\n  reset: () => void;\r\n}\r\n\r\nexport interface RotatingTextProps\r\n  extends Omit<\r\n    React.ComponentPropsWithoutRef<typeof motion.span>,\r\n    \"children\" | \"transition\" | \"initial\" | \"animate\" | \"exit\"\r\n  > {\r\n  texts: string[];\r\n  transition?: Transition;\r\n  initial?: boolean | Target | VariantLabels;\r\n animate?: boolean | VariantLabels | TargetAndTransition;\r\n  exit?: Target | VariantLabels;\r\n  animatePresenceMode?: \"sync\" | \"wait\";\r\n  animatePresenceInitial?: boolean;\r\n  rotationInterval?: number;\r\n  staggerDuration?: number;\r\n  staggerFrom?: \"first\" | \"last\" | \"center\" | \"random\" | number;\r\n  loop?: boolean;\r\n  auto?: boolean;\r\n  splitBy?: string;\r\n  onNext?: (index: number) => void;\r\n  mainClassName?: string;\r\n  splitLevelClassName?: string;\r\n  elementLevelClassName?: string;\r\n}\r\n\r\nconst RotatingText = forwardRef<RotatingTextRef, RotatingTextProps>(\r\n  (\r\n    {\r\n      texts,\r\n      transition = { type: \"spring\", damping: 25, stiffness: 300 },\r\n      initial = { y: \"100%\", opacity: 0 },\r\n      animate = { y: 0, opacity: 1 },\r\n      exit = { y: \"-120%\", opacity: 0 },\r\n      animatePresenceMode = \"wait\",\r\n      animatePresenceInitial = false,\r\n      rotationInterval = 2000,\r\n      staggerDuration = 0,\r\n      staggerFrom = \"first\",\r\n      loop = true,\r\n      auto = true,\r\n      splitBy = \"characters\",\r\n      onNext,\r\n      mainClassName,\r\n      splitLevelClassName,\r\n      elementLevelClassName,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [currentTextIndex, setCurrentTextIndex] = useState<number>(0);\r\n\r\n    const splitIntoCharacters = (text: string): string[] => {\r\n      if (typeof Intl !== \"undefined\" && Intl.Segmenter) {\r\n        const segmenter = new Intl.Segmenter(\"en\", { granularity: \"grapheme\" });\r\n        return Array.from(\r\n          segmenter.segment(text),\r\n          (segment) => segment.segment\r\n        );\r\n      }\r\n      return Array.from(text);\r\n    };\r\n\r\n    const elements = useMemo(() => {\r\n      const currentText: string = texts[currentTextIndex];\r\n      if (splitBy === \"characters\") {\r\n        const words = currentText.split(\" \");\r\n        return words.map((word, i) => ({\r\n          characters: splitIntoCharacters(word),\r\n          needsSpace: i !== words.length - 1,\r\n        }));\r\n      }\r\n      if (splitBy === \"words\") {\r\n        return currentText.split(\" \").map((word, i, arr) => ({\r\n          characters: [word],\r\n          needsSpace: i !== arr.length - 1,\r\n        }));\r\n      }\r\n      if (splitBy === \"lines\") {\r\n        return currentText.split(\"\\n\").map((line, i, arr) => ({\r\n          characters: [line],\r\n          needsSpace: i !== arr.length - 1,\r\n        }));\r\n      }\r\n\r\n      return currentText.split(splitBy).map((part, i, arr) => ({\r\n        characters: [part],\r\n        needsSpace: i !== arr.length - 1,\r\n      }));\r\n    }, [texts, currentTextIndex, splitBy]);\r\n\r\n    const getStaggerDelay = useCallback(\r\n      (index: number, totalChars: number): number => {\r\n        const total = totalChars;\r\n        if (staggerFrom === \"first\") return index * staggerDuration;\r\n        if (staggerFrom === \"last\")\r\n          return (total - 1 - index) * staggerDuration;\r\n        if (staggerFrom === \"center\") {\r\n          const center = Math.floor(total / 2);\r\n          return Math.abs(center - index) * staggerDuration;\r\n        }\r\n        if (staggerFrom === \"random\") {\r\n          const randomIndex = Math.floor(Math.random() * total);\r\n          return Math.abs(randomIndex - index) * staggerDuration;\r\n        }\r\n        return Math.abs((staggerFrom as number) - index) * staggerDuration;\r\n      },\r\n      [staggerFrom, staggerDuration]\r\n    );\r\n\r\n    const handleIndexChange = useCallback(\r\n      (newIndex: number) => {\r\n        setCurrentTextIndex(newIndex);\r\n        if (onNext) onNext(newIndex);\r\n      },\r\n      [onNext]\r\n    );\r\n\r\n    const next = useCallback(() => {\r\n      const nextIndex =\r\n        currentTextIndex === texts.length - 1\r\n          ? loop\r\n            ? 0\r\n            : currentTextIndex\r\n          : currentTextIndex + 1;\r\n      if (nextIndex !== currentTextIndex) {\r\n        handleIndexChange(nextIndex);\r\n      }\r\n    }, [currentTextIndex, texts.length, loop, handleIndexChange]);\r\n\r\n    const previous = useCallback(() => {\r\n      const prevIndex =\r\n        currentTextIndex === 0\r\n          ? loop\r\n            ? texts.length - 1\r\n            : currentTextIndex\r\n          : currentTextIndex - 1;\r\n      if (prevIndex !== currentTextIndex) {\r\n        handleIndexChange(prevIndex);\r\n      }\r\n    }, [currentTextIndex, texts.length, loop, handleIndexChange]);\r\n\r\n    const jumpTo = useCallback(\r\n      (index: number) => {\r\n        const validIndex = Math.max(0, Math.min(index, texts.length - 1));\r\n        if (validIndex !== currentTextIndex) {\r\n          handleIndexChange(validIndex);\r\n        }\r\n      },\r\n      [texts.length, currentTextIndex, handleIndexChange]\r\n    );\r\n\r\n    const reset = useCallback(() => {\r\n      if (currentTextIndex !== 0) {\r\n        handleIndexChange(0);\r\n      }\r\n    }, [currentTextIndex, handleIndexChange]);\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        next,\r\n        previous,\r\n        jumpTo,\r\n        reset,\r\n      }),\r\n      [next, previous, jumpTo, reset]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (!auto) return;\r\n      const intervalId = setInterval(next, rotationInterval);\r\n      return () => clearInterval(intervalId);\r\n    }, [next, rotationInterval, auto]);\r\n\r\n    return (\r\n      <motion.span\r\n        className={cn(\r\n          \"flex flex-wrap whitespace-pre-wrap relative\",\r\n          mainClassName\r\n        )}\r\n        {...rest}\r\n        layout\r\n        transition={transition}\r\n      >\r\n        <span className=\"sr-only\">{texts[currentTextIndex]}</span>\r\n        <AnimatePresence\r\n          mode={animatePresenceMode}\r\n          initial={animatePresenceInitial}\r\n        >\r\n          <motion.div\r\n            key={currentTextIndex}\r\n            className={cn(\r\n              splitBy === \"lines\"\r\n                ? \"flex flex-col w-full\"\r\n                : \"flex flex-wrap whitespace-pre-wrap relative\"\r\n            )}\r\n            layout\r\n            aria-hidden=\"true\"\r\n          >\r\n            {elements.map((wordObj, wordIndex, array) => {\r\n              const previousCharsCount = array\r\n                .slice(0, wordIndex)\r\n                .reduce((sum, word) => sum + word.characters.length, 0);\r\n              return (\r\n                <span\r\n                  key={wordIndex}\r\n                  className={cn(\"inline-flex\", splitLevelClassName)}\r\n                >\r\n                  {wordObj.characters.map((char, charIndex) => (\r\n                    <motion.span\r\n                      key={charIndex}\r\n                      initial={initial}\r\n                      animate={animate}\r\n                      exit={exit}\r\n                      transition={{\r\n                        ...transition,\r\n                        delay: getStaggerDelay(\r\n                          previousCharsCount + charIndex,\r\n                          array.reduce(\r\n                            (sum, word) => sum + word.characters.length,\r\n                            0\r\n                          )\r\n                        ),\r\n                      }}\r\n                      className={cn(\"inline-block\", elementLevelClassName)}\r\n                    >\r\n                      {char}\r\n                    </motion.span>\r\n                  ))}\r\n                  {wordObj.needsSpace && (\r\n                    <span className=\"whitespace-pre\"> </span>\r\n                  )}\r\n                </span>\r\n              );\r\n            })}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </motion.span>\r\n    );\r\n  }\r\n);\r\n\r\nRotatingText.displayName = \"RotatingText\";\r\nexport default RotatingText;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1325, "column": 0}, "map": {"version":3,"sources":["file:///D:/react/OMK/omk/src/components/herooverlay.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport RotatingText from \"./rotatingtext\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function HeroOverlay() {\r\n  return (\r\n    <motion.div\r\n      className=\"absolute inset-0 z-10 flex flex-col items-center justify-center px-4 md:px-8 text-center pointer-events-none\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 1.5 }}\r\n    >\r\n      {/* Subheading / Tagline */}\r\n      <motion.h2\r\n        initial={{ y: 20, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        transition={{ duration: 1 }}\r\n        className=\"text-sm sm:text-base md:text-lg tracking-widest text-white font-medium uppercase mb-4\"\r\n      >\r\n        Creating Moments That Matter\r\n      </motion.h2>\r\n\r\n      {/* Heading with static + animated rotating text */}\r\n      <div className=\"flex flex-wrap items-center justify-center gap-3 mb-4\">\r\n        <h1 className=\"text-4xl sm:text-6xl md:text-7xl font-extrabold text-amber-500 tracking-tight\">\r\n          We Capture\r\n        </h1>\r\n        <RotatingText\r\n          texts={[\"Emotions\", \"Smiles\", \"Love\", \"Stories\"]}\r\n          splitBy=\"words\"\r\n          mainClassName=\"text-4xl sm:text-6xl md:text-7xl font-extrabold text-white  drop-shadow-[0_0_10px_rgba(255,0,0,0.8)]\"\r\n          splitLevelClassName=\"gap-x-2\"\r\n          elementLevelClassName=\"inline-block\"\r\n          staggerDuration={0.12}\r\n          rotationInterval={2500}\r\n          loop\r\n          auto\r\n        />\r\n      </div>\r\n\r\n      {/* Supporting line */}\r\n      <p className=\"mt-4 text-white text-sm sm:text-lg md:text-xl max-w-xl font-light leading-relaxed\">\r\n        Professional Wedding Photography & Cinematography – Told with elegance,\r\n        style & soul.\r\n      </p>\r\n\r\n      {/* CTA Button */}\r\n      <motion.button\r\n        initial={{ scale: 0.95, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        transition={{ delay: 1.2, duration: 0.6 }}\r\n        className=\"mt-8 px-8 py-3 bg-transparent border-2 border-white text-white text-base sm:text-lg font-semibold rounded-full backdrop-blur-md shadow-md hover:scale-105 transition-transform duration-300 pointer-events-auto hover:border-amber-500  glow-border\"\r\n      >\r\n        Book Your Special Day →\r\n      </motion.button>\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACT,WAAU;QACV,SAAS;YAAE,SAAS;QAAE;QACtB,SAAS;YAAE,SAAS;QAAE;QACtB,YAAY;YAAE,UAAU;QAAI;;0BAG5B,8OAAC,0LAAA,CAAA,SAAM,CAAC,EAAE;gBACR,SAAS;oBAAE,GAAG;oBAAI,SAAS;gBAAE;gBAC7B,SAAS;oBAAE,GAAG;oBAAG,SAAS;gBAAE;gBAC5B,YAAY;oBAAE,UAAU;gBAAE;gBAC1B,WAAU;0BACX;;;;;;0BAKD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAgF;;;;;;kCAG9F,8OAAC,kIAAA,CAAA,UAAY;wBACX,OAAO;4BAAC;4BAAY;4BAAU;4BAAQ;yBAAU;wBAChD,SAAQ;wBACR,eAAc;wBACd,qBAAoB;wBACpB,uBAAsB;wBACtB,iBAAiB;wBACjB,kBAAkB;wBAClB,IAAI;wBACJ,IAAI;;;;;;;;;;;;0BAKR,8OAAC;gBAAE,WAAU;0BAAoF;;;;;;0BAMjG,8OAAC,0LAAA,CAAA,SAAM,CAAC,MAAM;gBACZ,SAAS;oBAAE,OAAO;oBAAM,SAAS;gBAAE;gBACnC,SAAS;oBAAE,OAAO;oBAAG,SAAS;gBAAE;gBAChC,YAAY;oBAAE,OAAO;oBAAK,UAAU;gBAAI;gBACxC,WAAU;0BACX;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 1445, "column": 0}, "map": {"version":3,"sources":["file:///D:/react/OMK/omk/src/components/gridmotion.tsx"],"sourcesContent":["\"use client\";\r\nimport SplashCursor from './splashcurser'\r\n\r\n\r\nimport { useEffect, useRef, FC } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport type { GridItem } from \"@/data\";\r\nimport HeroOverlay from \"@/components/herooverlay\";\r\n\r\ninterface GridMotionProps {\r\n  items?: GridItem[];\r\n  gradientColor?: string;\r\n}\r\n\r\nconst GridMotion: FC<GridMotionProps> = ({\r\n  items = [],\r\n  gradientColor = \"#dc2626\",\r\n}) => {\r\n  const gridRef = useRef<HTMLDivElement>(null);\r\n  const rowRefs = useRef<(HTMLDivElement | null)[]>([]);\r\n  const mouseXRef = useRef<number>(0);\r\n\r\n  const totalItems = 28;\r\n\r\n  const defaultItems: GridItem[] = Array.from(\r\n    { length: totalItems },\r\n    (_, i) => ({\r\n      image: `https://source.unsplash.com/random/300x300?sig=${i}`,\r\n      label: `Item ${i + 1}`,\r\n    })\r\n  );\r\n\r\n  const combinedItems: GridItem[] =\r\n    items.length >= totalItems\r\n      ? items.slice(0, totalItems)\r\n      : [...items, ...defaultItems.slice(items.length, totalItems)];\r\n\r\nuseEffect(() => {\r\n  gsap.ticker.lagSmoothing(0);\r\n\r\n  rowRefs.current.forEach((row, index) => {\r\n    if (row) {\r\n      const direction = index % 2 === 0 ? 1 : -1;\r\n      const moveAmount = 100; // Customize scroll distance\r\n      const duration = 6 + index; // Vary duration slightly per row\r\n\r\n      gsap.to(row, {\r\n        x: direction * moveAmount,\r\n        duration,\r\n        ease: \"none\",\r\n        repeat: -1,\r\n        yoyo: true,\r\n      });\r\n    }\r\n  });\r\n}, []);\r\n\r\n  return (\r\n    \r\n    <div ref={gridRef} className=\"h-full w-full overflow-hidden\">\r\n        <SplashCursor />\r\n      <section \r\n        className=\"w-full h-screen overflow-hidden relative flex items-center justify-center\"\r\n        style={{\r\n          background: `radial-gradient(circle, ${gradientColor} 0%, transparent 100%)`,\r\n        }}\r\n      >\r\n        <div className=\"absolute inset-0 bg-black/50 z-[3] pointer-events-none\"></div>\r\n        <div className=\"absolute inset-0 pointer-events-none z-[4] bg-[length:250px]\"></div>\r\n        <div className=\"gap-4 flex-none relative w-[150vw] h-[150vh] grid grid-rows-4 grid-cols-1 rotate-[-15deg] origin-center z-[2]\">\r\n          {Array.from({ length: 4 }, (_, rowIndex) => (\r\n            <div\r\n              key={rowIndex}\r\n              className=\"grid gap-4 grid-cols-7\"\r\n              style={{ willChange: \"transform, filter\" }}\r\n              ref={(el) => {\r\n                rowRefs.current[rowIndex] = el;\r\n              }}\r\n            >\r\n              {Array.from({ length: 7 }, (_, itemIndex) => {\r\n                const index = rowIndex * 7 + itemIndex;\r\n                const content = combinedItems[index];\r\n                if (!content) return null;\r\n\r\n                return (\r\n                  <div key={itemIndex} className=\"relative\">\r\n  <div className=\"relative w-full h-full overflow-hidden rounded-xl bg-neutral-50 text-red-700 border border-red-300 shadow-lg flex items-center justify-center\">\r\n    {/* Image only or image + text */}\r\n    {content.image && (\r\n      <div\r\n        className=\"w-full h-full bg-cover bg-center absolute top-0 left-0\"\r\n        style={{ backgroundImage: `url(${content.image})` }}\r\n      ></div>\r\n    )}\r\n\r\n    {/* Label - modern card (text-only) */}\r\n    {content.label && !content.image && (\r\n      <div className=\"z-[1] text-center px-4 py-3 font-semibold text-lg sm:text-xl tracking-wide\">\r\n        {content.label}\r\n      </div>\r\n    )}\r\n  </div>\r\n</div>\r\n\r\n                );\r\n              })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <HeroOverlay />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridMotion;\r\n"],"names":[],"mappings":";;;;AACA;AAGA;AACA;AAEA;AAPA;;;;;;AAcA,MAAM,aAAkC,CAAC,EACvC,QAAQ,EAAE,EACV,gBAAgB,SAAS,EAC1B;IACC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA6B,EAAE;IACpD,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAU;IAEjC,MAAM,aAAa;IAEnB,MAAM,eAA2B,MAAM,IAAI,CACzC;QAAE,QAAQ;IAAW,GACrB,CAAC,GAAG,IAAM,CAAC;YACT,OAAO,CAAC,+CAA+C,EAAE,GAAG;YAC5D,OAAO,CAAC,KAAK,EAAE,IAAI,GAAG;QACxB,CAAC;IAGH,MAAM,gBACJ,MAAM,MAAM,IAAI,aACZ,MAAM,KAAK,CAAC,GAAG,cACf;WAAI;WAAU,aAAa,KAAK,CAAC,MAAM,MAAM,EAAE;KAAY;IAEnE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,6IAAA,CAAA,OAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAEzB,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK;YAC5B,IAAI,KAAK;gBACP,MAAM,YAAY,QAAQ,MAAM,IAAI,IAAI,CAAC;gBACzC,MAAM,aAAa,KAAK,4BAA4B;gBACpD,MAAM,WAAW,IAAI,OAAO,iCAAiC;gBAE7D,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,KAAK;oBACX,GAAG,YAAY;oBACf;oBACA,MAAM;oBACN,QAAQ,CAAC;oBACT,MAAM;gBACR;YACF;QACF;IACF,GAAG,EAAE;IAEH,qBAEE,8OAAC;QAAI,KAAK;QAAS,WAAU;;0BACzB,8OAAC,kIAAA,CAAA,UAAY;;;;;0BACf,8OAAC;gBACC,WAAU;gBACV,OAAO;oBACL,YAAY,CAAC,wBAAwB,EAAE,cAAc,sBAAsB,CAAC;gBAC9E;;kCAEA,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI,CAAC;4BAAE,QAAQ;wBAAE,GAAG,CAAC,GAAG,yBAC7B,8OAAC;gCAEC,WAAU;gCACV,OAAO;oCAAE,YAAY;gCAAoB;gCACzC,KAAK,CAAC;oCACJ,QAAQ,OAAO,CAAC,SAAS,GAAG;gCAC9B;0CAEC,MAAM,IAAI,CAAC;oCAAE,QAAQ;gCAAE,GAAG,CAAC,GAAG;oCAC7B,MAAM,QAAQ,WAAW,IAAI;oCAC7B,MAAM,UAAU,aAAa,CAAC,MAAM;oCACpC,IAAI,CAAC,SAAS,OAAO;oCAErB,qBACE,8OAAC;wCAAoB,WAAU;kDAC/C,cAAA,8OAAC;4CAAI,WAAU;;gDAEZ,QAAQ,KAAK,kBACZ,8OAAC;oDACC,WAAU;oDACV,OAAO;wDAAE,iBAAiB,CAAC,IAAI,EAAE,QAAQ,KAAK,CAAC,CAAC,CAAC;oDAAC;;;;;;gDAKrD,QAAQ,KAAK,IAAI,CAAC,QAAQ,KAAK,kBAC9B,8OAAC;oDAAI,WAAU;8DACZ,QAAQ,KAAK;;;;;;;;;;;;uCAbM;;;;;gCAoBd;+BAjCK;;;;;;;;;;kCAqCX,8OAAC,iIAAA,CAAA,UAAW;;;;;;;;;;;;;;;;;AAIpB;uCAEe","debugId":null}},
    {"offset": {"line": 1608, "column": 0}, "map": {"version":3,"sources":["file:///D:/react/OMK/omk/src/components/aboutUS.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Award, Users, Clock, Sparkles } from \"lucide-react\";\r\n\r\nconst AboutUs = () => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  const images = [\r\n    \"https://images.pexels.com/photos/1024993/pexels-photo-1024993.jpeg?auto=compress&cs=tinysrgb&w=400&h=800&fit=crop\",\r\n    \"https://images.pexels.com/photos/1043471/pexels-photo-1043471.jpeg?auto=compress&cs=tinysrgb&w=400&h=800&fit=crop\",\r\n    \"https://images.pexels.com/photos/1024960/pexels-photo-1024960.jpeg?auto=compress&cs=tinysrgb&w=400&h=800&fit=crop\",\r\n    \"https://images.pexels.com/photos/1043474/pexels-photo-1043474.jpeg?auto=compress&cs=tinysrgb&w=400&h=800&fit=crop\",\r\n    \"https://images.pexels.com/photos/1024967/pexels-photo-1024967.jpeg?auto=compress&cs=tinysrgb&w=400&h=800&fit=crop\",\r\n    \"https://images.pexels.com/photos/1043473/pexels-photo-1043473.jpeg?auto=compress&cs=tinysrgb&w=400&h=800&fit=crop\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentImageIndex((prev) =>\r\n        prev === images.length - 1 ? 0 : prev + 1\r\n      );\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [images.length]);\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        delayChildren: 0.3,\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  };\r\n\r\n  const itemVariants = {\r\n  hidden: { y: 20, opacity: 0 },\r\n  visible: {\r\n    y: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 0.8,\r\n      ease: [0.25, 0.1, 0.25, 1], // ✅ this is valid\r\n    },\r\n  },\r\n};\r\n\r\n\r\n  const slideVariants = {\r\n    enter: { x: 300, opacity: 0 },\r\n    center: { x: 0, opacity: 1, zIndex: 1 },\r\n    exit: { x: -300, opacity: 0, zIndex: 0 },\r\n  };\r\n\r\n  const stats = [\r\n    { icon: Award, value: \"500+\", label: \"Projects Completed\" },\r\n    { icon: Users, value: \"300+\", label: \"Happy Clients\" },\r\n    { icon: Clock, value: \"5+\", label: \"Years Experience\" },\r\n    { icon: Sparkles, value: \"50+\", label: \"Awards Won\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-white to-red-50\">\r\n      {/* Hero Section */}\r\n      <motion.section\r\n        id=\"about\"\r\n        className=\"relative py-24 px-6 overflow-hidden\"\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        variants={containerVariants}\r\n      >\r\n        <div className=\"absolute inset-0 bg-gradient-to-r from-red-100/10 to-red-200/5\"></div>\r\n        <div className=\"relative max-w-7xl mx-auto grid lg:grid-cols-2 gap-12 items-center\">\r\n          {/* Text Content */}\r\n          <motion.div variants={itemVariants} className=\"space-y-8 z-10\">\r\n            <span className=\"inline-block px-4 py-2 bg-red-100 text-red-700 rounded-full text-sm font-medium\">\r\n              About Our Studio\r\n            </span>\r\n\r\n            <h1 className=\"text-4xl md:text-6xl font-bold bg-gradient-to-r from-red-700 via-red-600 to-amber-500 bg-clip-text text-transparent\">\r\n              Capturing Life’s\r\n              <br />\r\n              <span className=\"text-slate-800\">Beautiful Moments</span>\r\n            </h1>\r\n\r\n            <div className=\"space-y-6 text-slate-700 text-lg\">\r\n              <p>\r\n                We are a passionate team of visual storytellers dedicated to\r\n                preserving your most cherished memories.\r\n              </p>\r\n              <p>\r\n                Specializing in photography, videography, pre-wedding shoots,\r\n                and cinematography, we bring fresh vision and creative\r\n                excellence to every project.\r\n              </p>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4 pt-4\">\r\n                {[\r\n                  \"Photography\",\r\n                  \"Videography\",\r\n                  \"Pre-Wedding\",\r\n                  \"Cinematography\",\r\n                ].map((service, i) => (\r\n                  <div key={i} className=\"flex items-center gap-3\">\r\n                    <div\r\n                      className={`w-3 h-3 rounded-full ${\r\n                        i < 2 ? \"bg-red-600\" : \"bg-amber-500\"\r\n                      }`}\r\n                    />\r\n                    <span>{service}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Image Mockup */}\r\n          <motion.div variants={itemVariants} className=\"relative z-10\">\r\n            <div className=\"relative w-80 h-[600px] bg-black rounded-[3rem] p-2 shadow-2xl mx-auto\">\r\n              <div className=\"w-full h-full bg-white rounded-[2.5rem] relative overflow-hidden\">\r\n                {/* Notch */}\r\n                <div className=\"absolute top-0 left-1/2 -translate-x-1/2 w-32 h-6 bg-black rounded-b-2xl z-10\"></div>\r\n\r\n                <AnimatePresence mode=\"wait\">\r\n                  <motion.img\r\n                    key={currentImageIndex}\r\n                    src={images[currentImageIndex]}\r\n                    alt=\"Photography Showcase\"\r\n                    className=\"absolute inset-0 w-full h-full object-cover rounded-[2.5rem]\"\r\n                    variants={slideVariants}\r\n                    initial=\"enter\"\r\n                    animate=\"center\"\r\n                    exit=\"exit\"\r\n                    transition={{\r\n                      x: { type: \"spring\", stiffness: 300, damping: 30 },\r\n                      opacity: { duration: 0.2 },\r\n                    }}\r\n                  />\r\n                </AnimatePresence>\r\n\r\n                {/* Overlay */}\r\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent z-10\" />\r\n\r\n                {/* Dots */}\r\n                <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 flex gap-2 z-20\">\r\n                  {images.map((_, i) => (\r\n                    <div\r\n                      key={i}\r\n                      className={`w-2 h-2 rounded-full ${\r\n                        i === currentImageIndex\r\n                          ? \"bg-white scale-125\"\r\n                          : \"bg-white/50\"\r\n                      } transition-all`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Floating Icons */}\r\n            <motion.div\r\n              animate={{ y: [0, -10, 0], rotate: [0, 5, 0] }}\r\n              transition={{ duration: 4, repeat: Infinity, ease: \"easeInOut\" }}\r\n              className=\"absolute -top-4 -left-4 w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-2xl flex items-center justify-center shadow-lg\"\r\n            >\r\n              <span className=\"text-white text-2xl\">📸</span>\r\n            </motion.div>\r\n            <motion.div\r\n              animate={{ y: [0, 10, 0], rotate: [0, -5, 0] }}\r\n              transition={{\r\n                duration: 3,\r\n                repeat: Infinity,\r\n                ease: \"easeInOut\",\r\n                delay: 1,\r\n              }}\r\n              className=\"absolute -bottom-4 -right-4 w-12 h-12 bg-gradient-to-br from-amber-500 to-amber-600 rounded-xl flex items-center justify-center shadow-lg\"\r\n            >\r\n              <span className=\"text-white text-lg\">🎥</span>\r\n            </motion.div>\r\n          </motion.div>\r\n        </div>\r\n      </motion.section>\r\n\r\n      {/* Stats Section */}\r\n      <motion.section\r\n        className=\"py-20 px-6 bg-gradient-to-r from-red-600 to-red-700\"\r\n        initial=\"hidden\"\r\n        whileInView=\"visible\"\r\n        viewport={{ once: true }}\r\n        variants={containerVariants}\r\n      >\r\n        <div className=\"max-w-6xl mx-auto\">\r\n          <motion.div variants={itemVariants} className=\"text-center mb-12\">\r\n            <h2 className=\"text-4xl font-bold text-white mb-4\">\r\n              Our <span className=\"text-amber-300\">Journey</span>\r\n            </h2>\r\n            <p className=\"text-red-100 text-lg\">\r\n              Numbers that reflect our commitment to excellence and client\r\n              satisfaction.\r\n            </p>\r\n          </motion.div>\r\n\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\r\n            {stats.map((stat, i) => (\r\n              <motion.div\r\n                key={i}\r\n                variants={itemVariants}\r\n                whileHover={{ scale: 1.05 }}\r\n                className=\"text-center group\"\r\n              >\r\n                <div className=\"w-16 h-16 bg-white/10 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:bg-white/20 transition-colors duration-300\">\r\n                  <stat.icon className=\"w-8 h-8 text-amber-300\" />\r\n                </div>\r\n                <div className=\"text-3xl md:text-4xl font-bold text-white mb-2\">\r\n                  {stat.value}\r\n                </div>\r\n                <div className=\"text-red-100 font-medium\">{stat.label}</div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </motion.section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}